{"ast":null,"code":"var _jsxFileName = \"/Users/asad/Desktop/DevPulse/devPulse-frontend/src/components/projects/projectLists.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Import necessary libraries\nimport React, { useState, useRef, useEffect } from 'react';\nimport HiddenModals from './hiddenModals';\nimport HiddenModalDescription from './hiddenModalsDescription';\nimport Vmarine from '../../../src/pojectImages/Vmarine.jpg';\nimport aguaDeLuz from '../../../src/pojectImages/aguaDeLuz.png';\nimport todo from '../../../src/pojectImages/todolist.png';\nimport './ProjectLists.css'; // Import your external CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = ({\n  name,\n  image,\n  onClick\n}) => {\n  _s();\n  //   const projectCardRef = useRef(null);\n\n  const handleCardClick = () => {\n    var _projectCardRef$curre;\n    onClick();\n    // Access the ref.current using optional chaining\n    console.log('Card Clicked!');\n    console.log('Ref current style:', (_projectCardRef$curre = projectCardRef.current) === null || _projectCardRef$curre === void 0 ? void 0 : _projectCardRef$curre.style);\n  };\n  useEffect(() => {\n    // Log when the component mounts\n    console.log('Component Mounted:', projectCardRef.current);\n    return () => {\n      // Log when the component unmounts\n      console.log('Component Unmounted:', projectCardRef.current);\n    };\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-sm-12 col-md-4 mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card wow fadeIn\",\n      style: {\n        backgroundImage: `url(${image})`\n      },\n      onClick: handleCardClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        ref: projectCardRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProjectCard;\nconst ProjectList = () => {\n  _s2();\n  const [projects] = useState([{\n    name: 'Zahrawi Education System',\n    image: Vmarine,\n    button: 'Zahrawi Education System',\n    description: ['A clean website for an Education System.', 'Tech Stack: React.js, Node.js, NodeMailer, MongoDB'],\n    ref: 'https://65435e5984e9a02b6a30f733--magenta-unicorn-93f74e.netlify.app/'\n  }\n  // ... (other projects)\n  ]);\n  const showModal = name => {\n    const modalBG = document.getElementById('gallery-card');\n    const modal = document.getElementById(name);\n    modalBG.style.display = 'block';\n    modal.style.display = 'block';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row my-5\",\n    children: [projects.map((project, index) => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      ...project,\n      onClick: () => showModal(project.name)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(HiddenModals, {\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProjectList, \"LGDgWvn8www1hGrqnh/lRbjY98o=\");\n_c2 = ProjectList;\nexport default ProjectList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectCard\");\n$RefreshReg$(_c2, \"ProjectList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","HiddenModals","HiddenModalDescription","Vmarine","aguaDeLuz","todo","jsxDEV","_jsxDEV","ProjectCard","name","image","onClick","_s","handleCardClick","_projectCardRef$curre","console","log","projectCardRef","current","style","className","children","backgroundImage","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProjectList","_s2","projects","button","description","showModal","modalBG","document","getElementById","modal","display","map","project","index","_c2","$RefreshReg$"],"sources":["/Users/asad/Desktop/DevPulse/devPulse-frontend/src/components/projects/projectLists.jsx"],"sourcesContent":["// Import necessary libraries\nimport React, { useState, useRef, useEffect } from 'react';\nimport HiddenModals from './hiddenModals';\nimport HiddenModalDescription from './hiddenModalsDescription';\nimport Vmarine from '../../../src/pojectImages/Vmarine.jpg';\nimport aguaDeLuz from '../../../src/pojectImages/aguaDeLuz.png';\nimport todo from '../../../src/pojectImages/todolist.png';\n\nimport './ProjectLists.css'; // Import your external CSS for styling\n\nconst ProjectCard = ({ name, image, onClick }) => {\n//   const projectCardRef = useRef(null);\n\n  const handleCardClick = () => {\n    onClick();\n    // Access the ref.current using optional chaining\n    console.log('Card Clicked!');\n    console.log('Ref current style:', projectCardRef.current?.style);\n  };\n\n  useEffect(() => {\n    // Log when the component mounts\n    console.log('Component Mounted:', projectCardRef.current);\n    return () => {\n      // Log when the component unmounts\n      console.log('Component Unmounted:', projectCardRef.current);\n    };\n  }, []); // Empty dependency array ensures the effect runs only once\n\n  return (\n    <div className=\"col-12 col-sm-12 col-md-4 mb-4\">\n      <div\n        className=\"project-card wow fadeIn\"\n        style={{ backgroundImage: `url(${image})` }}\n        onClick={handleCardClick}\n      >\n        <div className=\"overlay\" ref={projectCardRef}>\n          <div className=\"text\">\n            <h2>{name}</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProjectList = () => {\n  const [projects] = useState([\n    {\n      name: 'Zahrawi Education System',\n      image: Vmarine,\n      button: 'Zahrawi Education System',\n      description: [\n        'A clean website for an Education System.',\n        'Tech Stack: React.js, Node.js, NodeMailer, MongoDB',\n      ],\n      ref: 'https://65435e5984e9a02b6a30f733--magenta-unicorn-93f74e.netlify.app/',\n    },\n    // ... (other projects)\n  ]);\n\n  const showModal = (name) => {\n    const modalBG = document.getElementById('gallery-card');\n    const modal = document.getElementById(name);\n    modalBG.style.display = 'block';\n    modal.style.display = 'block';\n  };\n\n  return (\n    <div className=\"row my-5\">\n      {projects.map((project, index) => (\n        <ProjectCard key={index} {...project} onClick={() => showModal(project.name)} />\n      ))}\n      <HiddenModals projects={projects} />\n    </div>\n  );\n};\n\nexport default ProjectList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}